type: bayopt # single|window, maybe add opt
key: baselines_and_models #added to the csv names
evaluation: evaluation_both #evaluation|evaluation_last|evaluation_multiple
data:
  name: rsc15-100k #added in the end of the csv names
  folder: data/rsc15/prepared_window/
  prefix: yoochoose-clicks-100k
  opts: {sessions_test: 100}

results:
  folder: results/bayopt/rsc15_100k/

metrics:
- class: accuracy.HitRate
  length: [5,10,15,20]
- class: accuracy.MRR
  length: [5,10,15,20]
- class: accuracy_multiple.MAP
  length: [5,10,15,20]
- class: coverage.Coverage
  length: [20]
- class: popularity.Popularity
  length: [20]
- class: time_memory_usage.Time_usage_training
- class: time_memory_usage.Time_usage_testing
#- class: time_memory_usage.Memory_usage

optimize:
  class: accuracy_multiple.MAP
  length: [20]
  iterations: 50 #optional

algorithms:
# No need for AR
- class: gru4rec.gru4rec.GRU4Rec
  params: {}
  params_opt:
    loss: ['bpr-max', 'top1-max']
    final_act: ['elu-0.5','linear']
    dropout_p_hidden: {from: 0.0, to: 0.9, type: float}
    momentum: {from: 0.0, to: 0.9, in: 10, type: float}
    learning_rate: {from: 0.01, to: 0.5, type: float}
    constrained_embedding: [True,False]
  key: gru4rec
- class: knn.vsknn.VMContextKNN
  params: {}
  params_opt:
    k: [50,100,500,1000,1500]
    sample_size: [500,1000,2500,5000,10000]
    weighting: ['same','div','linear','quadratic','log']
    weighting_score: ['same','div','linear','quadratic','log']
    idf_weighting: [False,1,2,5,10]
  key: vsknn